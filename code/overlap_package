library(vegan)
install.packages("permute")
install.packages("lattice")
library(permute)
install.packages("vegan")

library(lattice)
library(permute)
library(vegan)
data(dune)
dune
#function head: solo le prime righe di dati 

head(dune)

#function tail: mostra solo le ultime righe di dati

tail(dune)

decorana(dune)
#let's give a name to the function decoarana(dune)

ord <- decorana(dune)
summary(ord)
ord #it gives back information about the lengths of axis 
#if we make a sum of the all axis we can see a percentage (percentuale di quanto ricoprono gli assi)
ldc1 = 3.7004
ldc2 = 3.1166
ldc3 = 1.30055
ldc4 = 1.47888

total = ldc1 + ldc2 + ldc3 + ldc4

pldc1 = ldc1 * 100/ total
pldc2 = ldc2 * 100/ total
pldc3 = ldc3 * 100/ total
pldc4 = ldc4 * 100/ total

pldc1
pldc2
pldc3
pldc4

#how much cumulative percentage represent the first two axes?
pldc1 + pldc2  #they have a high percentage

plot(ord) #I see the ultimate variate multianalysis space 

install.packages("overlap")
library(overlap)

data(kerinci)
kerinci
head(kerinci)

kerinci$Timerad <- kerinci$Time * 2 * pi

kerinci$Timerad
head(kerinci)


tiger <- kerinci[kerinci$Sps=="tiger",]
tiger

timetig <- tiger$timeRad
timetig
plot(tiger$timeRad)
densityPlot(timetig, rug)

timetig <- tiger$timeRad
densityPlot(timetig, rug=TRUE)


macaque <- kerinci[kerinci$Sps=="macaque",]
macaque
plot(macaque)
head(macaque)
densityPlot(timetig, rug = TRUE)

kerinci$timeRad <- kerinci$Time * 2 * pi

tiger <- kerinci[kerinci$Sps=="tiger",]

timetig <- tiger$timeRad
densityPlot(timetig, rug=TRUE)



